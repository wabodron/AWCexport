import {
    SEARCH_START,
    SEARCH_SUCCESS,
    SEARCH_FAILURE,
    SETVALUE,
    SETEMAIL,
    SETADDRESS,
    SETACCOUNT,
    HIDE,
    SHOW,
    CLEAR
} from 'actionTypes'

//this page maps the functions that are called in each component to an action that is dispatched in the store. 

export const setValue = (value) => dispatch => {
    fetch("https://nettest2api.awc-inc.com/customer/where/4CM4-316") 
        .then(function(response) {
            return response.json()
        })
        .then((myJson) => {
            const AccountCodes = myJson.map((account) => {
                return account.AccountCode
            })
            for (let i = 0; i <= myJson.length; i++) {
                if (RegExp('^'+ value.trim()+'$', 'i').test(AccountCodes[i].trim())) {
                    dispatch({ type: SETACCOUNT, account: myJson[i]});
                    dispatch({ type: SETADDRESS, address: myJson[i].BillToAddress1});
                    dispatch({ type: SETEMAIL, email: myJson[i].ContactEmail});
                    break;
                } 
                if (i === myJson.length) {
                    alert("Account Not Found :(")
                    dispatch({ type: CLEAR })
                }
            }
        })
    dispatch({ type: SETVALUE, value: value });
}

export const setEmail = (value) => dispatch => {
    dispatch({ type: SETEMAIL, email: value });
}

export const clear = () => dispatch => {
    dispatch({type: CLEAR})
}

export const setAddress = (value) => dispatch => {
    dispatch({ type: SETADDRESS, address: value });
}

export const setAccount = (value) => dispatch => [
    dispatch({ type: SETACCOUNT, account: value})
]

export const hide = (component) => dispatch => {
    dispatch({ type: HIDE, component: component});
}

export const show = (component) => dispatch => {
    dispatch({ type: SHOW, component: component});
}

export const search = (searchField) => dispatch => {
    dispatch({ type: SEARCH_START })
    console.log(searchField)
    try {
        fetch("https://nettest2api.awc-inc.com/customer/where/4CM4-316")
            .then(function(response) {
                return response.json();
            })
            .then((myJson) => {
                const results = myJson.filter(value => {
                    return Object.getOwnPropertyNames(searchField).every((searchValue) => value[searchValue].startsWith(searchField[searchValue]))
                });
                dispatch({ type: SEARCH_SUCCESS, results: results });
            })
    } catch (err) {
        dispatch({
            type: SEARCH_FAILURE,
            results: err
        })
    }
}