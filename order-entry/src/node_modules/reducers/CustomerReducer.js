import {
    SETVALUE,
    SHOW,
    HIDE
} from 'actionTypes'

// the state should be as shallow as possible. because it is immutable and reducers must be pure functions, deeply nested reducers become hard to handle very quickly. 
// the ukranian guy made his reducers deeper than i would have and it was confusing. 
// if it seems too deep consider separating it into another reducer to be combined later. 

let initialState = {
    value: '',
    visi: false
}

export default function SearchBoxReducer(state = initialState, action) {
    switch(action.type) {
        case SETVALUE:
            return {
                ...state,
                value: action.value
            }
        case SHOW:
            if (action.component === 'CustomerInput') {
                return { ...state, visi: true}
            } else {
                return { ...state, visi: false}
            }
        case HIDE:
            if (action.component === 'CustomerInput') {
                return { ...state, visi: false};
            };
        return state;
        default:
            return state;
    }
}