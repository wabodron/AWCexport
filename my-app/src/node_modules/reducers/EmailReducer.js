import { SETEMAIL, SHOW, HIDE, CLEAR } from 'actionTypes'

const initialState = {
    value: '',
    visi: false
}

// you should separate out your reducers as much as possible to help with scaling.
// this is just an example showing how its done. see searchBox reducer for most of the reducing stuff

export default function EmailReducer(state = initialState, action) {
    switch (action.type) {
        case SETEMAIL:
            return { ...state, value: action.email}
        case SHOW:
            if (action.component === 'EmailInput') {
                return { ...state, visi: true}
            } else {
                return { ...state, visi: false}
            }
        case HIDE:
            if (action.component === 'EmailInput') {
                return { ...state, visi: false};
            }
            return state;
        case CLEAR: 
            return {...state, value: ''}
        default:
            return state
    }
}

// function searchComponentReducerMaker(name) {
//     return (state = initialState, action) => {
//         switch (action.type) {
//             case SETEMAIL:
//                 return { ...state, value: action.email}
//             case SHOW:
//                 if (action.component === name) {
//                     return { ...state, visi: true}
//                 } else {
//                     return { ...state, visi: false}
//                 }
//             case HIDE:
//                 if (action.component === name) {
//                     return { ...state, visi: false};
//                 }
//                 return state;
//             case CLEAR: 
//                 return {...state, value: ''}
//             default:
//                 return state
//         }
//     }
// }

// function* gen() {
//     let i = 0;
//     while(true) {
//         i++;
//         yield searchComponentReducerMaker(i.toString());
//     }
// }